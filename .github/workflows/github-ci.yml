name: manual workflow
on:
  push:
    branches: [azure-appservice]
  workflow_dispatch:
  repository_dispatch:
    types: [opened, deleted, created]

env:
  AZURE_WEBAPP_NAME: weekdone # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: "./client" # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: "10.x" # set this to the node version to use

jobs:
  NodeJSScan-SAST:
    name: NodeJS Code Scanning SAST
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.JS ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: NodeJsScan Scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: "."

  CodeQL-Scan-SAST:
    name: CodeQL-Scan-SAST
    runs-on: ubuntu-latest
    needs: NodeJSScan-SAST
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ["javascript"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  build-and-deploy:
    name: Build and Install NPM packages
    needs: CodeQL-Scan-SAST
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Weekdone Client npm build and Install
        run: |
          npm ci
        working-directory: ./client
      - name: "Deploy to Azure WebApp"
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
